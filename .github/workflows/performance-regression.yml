name: Performance Regression

on:
  pull_request:
    branches: [ main ]

permissions:
  contents: read
  pull-requests: write

jobs:
  performance-regression:
    name: Performance Regression Check
    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v3
      with:
        fetch-depth: 0

    - name: Checkout Base Branch
      run: |
        git checkout \${{ github.base_ref }}

    - name: Setup Environment
      run: |
        sudo apt-get update
        sudo apt-get install -y cmake ninja-build libasio-dev libfmt-dev

    - name: Build Base Branch
      run: |
        cmake -B build-base -G Ninja -DCMAKE_BUILD_TYPE=Release -DNETWORK_BUILD_BENCHMARKS=ON || true
        cmake --build build-base --target benchmark || true

    - name: Run Base Benchmark
      continue-on-error: true
      run: |
        if [ -f "build-base/benchmark" ]; then
          cd build-base
          ./benchmark > ../benchmark-base.txt || echo "No benchmark results" > ../benchmark-base.txt
          cd ..
        else
          echo "No benchmark executable found - documentation-only change" > benchmark-base.txt
        fi

    - name: Checkout PR Branch
      run: |
        git checkout \${{ github.head_ref }}

    - name: Build PR Branch
      run: |
        cmake -B build-pr -G Ninja -DCMAKE_BUILD_TYPE=Release -DNETWORK_BUILD_BENCHMARKS=ON || true
        cmake --build build-pr --target benchmark || true

    - name: Run PR Benchmark
      continue-on-error: true
      run: |
        if [ -f "build-pr/benchmark" ]; then
          cd build-pr
          ./benchmark > ../benchmark-pr.txt || echo "No benchmark results" > ../benchmark-pr.txt
          cd ..
        else
          echo "No benchmark executable found - documentation-only change" > benchmark-pr.txt
        fi

    - name: Compare Performance
      run: |
        echo "## Performance Comparison" > performance-report.md
        echo "### Base Branch Results" >> performance-report.md
        grep -E "Throughput:|Latency:" benchmark-base.txt >> performance-report.md || echo "No base results" >> performance-report.md
        echo "" >> performance-report.md
        echo "### PR Branch Results" >> performance-report.md
        grep -E "Throughput:|Latency:" benchmark-pr.txt >> performance-report.md || echo "No PR results" >> performance-report.md

        # Simple regression check
        base_throughput=$(grep "Average throughput:" benchmark-base.txt | grep -oE '[0-9]+' | head -1)
        pr_throughput=$(grep "Average throughput:" benchmark-pr.txt | grep -oE '[0-9]+' | head -1)

        if [ ! -z "$base_throughput" ] && [ ! -z "$pr_throughput" ]; then
          regression_threshold=90
          threshold=$((base_throughput * regression_threshold / 100))
          if [ "$pr_throughput" -lt "$threshold" ]; then
            echo "⚠️ Performance regression detected: PR throughput ($pr_throughput) is less than 90% of base ($base_throughput)" >> performance-report.md
            exit 1
          else
            echo "✅ No performance regression detected" >> performance-report.md
          fi
        fi

    - name: Comment PR with Performance Report
      if: always()
      uses: actions/github-script@v6
      with:
        script: |
          const fs = require('fs');
          const report = fs.readFileSync('performance-report.md', 'utf8');
          github.rest.issues.createComment({
            issue_number: context.issue.number,
            owner: context.repo.owner,
            repo: context.repo.repo,
            body: report
          });
